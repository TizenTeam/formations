_Utilisation des collections pour résoudre un problème concret_

On souhaite gérer une bibliothèque de disques audio.

Voici le diagramme des classes _à minima_, vous aurez bien sûr à ajouter des attributs et des méthodes selon la conception que vous aurez choisie !

Classe `Chanson` :

- attribut *privé* `nom` de type `String`,
- attribut *privé* `duree` de type `int` (durée de la chanson en secondes),
- constructeur et accesseurs.

Classe `Disque` :

- attribut *privé* `nom` de type `String`,
- attribut *privé* `codeBarre` de type `String`,
- attribut *privé* `chansons` de type `List<Chanson>`,
- constructeur et accesseurs,
- `addChanson( Chanson chanson )`,
- `getDuree()` retourne la durée totale du disque.

Classe `Bibliotheque` :

- les attributs nécessaires,
- `boolean ajouterDisque( Disque disque )`. Cette méthode renvoie false si un disque avec le même code barre existe (et donc le disque n'est pas ajouté), et `true` si le disque a bien été ajouté à la bibliothèque.
- `boolean retirerDisque( String codeBarre )` qui retourne `true` si le disque a bien été retiré,
- `getDisque( String codeBarre )`,
- `List<Disque> rechercherDisques( String recherche )` : retourne la liste des disques dont le nom contient la chaîne `recherche`, peu importe la casse.
- `List<Chanson> rechercherChansons( String recherche )` : retourne la liste des chansons dont le titre contient `recherche` (sans prendre la casse en compte).

On considère qu'une fois ajouté à la bibliothèque, les disques et leurs chansons ne changent pas.

Commencez par implémenter les classes ci-dessus.

Puis proposez une interface en ligne de commande qui permette à l'utilisateur :

- de consulter la bibliothèque (chercher les disques par nom). En tapant une recherche il obtiendra la liste des disques correspondant ainsi que leur code barre.
- de consulter les détails d'un disque : en tapant le code barre du disque, il obtient la liste des chansons (nom de la chanson + durée).
- chercher des chansons : en tapant une recherche l'utilisateur reçoit les chansons avec le titre recherché, ainsi que le code barre du disque qui la contient.

## Interface utilisateur

Voici le contenu de la classe qui permet de recevoir ce que l'utilisateur a saisi :

	import java.io.BufferedReader;
	import java.io.IOException;
	import java.io.InputStreamReader;

	public class Saisie
	{
		public static String saisie( String message )
		{
			System.out.println( message );
			System.out.print( "> " );

			BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ) );
			try
			{
				return reader.readLine();
			}
			catch( IOException e )
			{
				e.printStackTrace();
				return null;
			}
		}

		public static int saisieInt( String message )
		{
			String result = saisie( message );

			return Integer.parseInt( result );
		}
	}


## Mise en place de l'exception

- `void ajouterDisque( Disque disque ) throws DisqueDejaPresentException`. Cette méthode provoque une exception `DisqueDejaPresentException` (que vous définirez) lorsqu'on ajoute un disque dont le code barre est déjà enregistré dans la bibliothèque.